/* Mixin */
@mixin css3-prefix($property, $value) {
  -webkit-#{$property}: #{$value};
  -khtml-#{$property}: #{$value};
  -moz-#{$property}: #{$value};
  -ms-#{$property}: #{$value};
  -o-#{$property}: #{$value};
  #{$property}: #{$value};
}


/// Background Gradient
/// @param {Color} $startColor [#3C3C3C] - Start Color
/// @param {Color} $endColor [#999999] - End Color

@mixin background-gradient($startColor: #3C3C3C, $endColor: #999999) {
  background-color: $startColor;
  background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
  background-image: -webkit-linear-gradient(top, $startColor, $endColor);
  background-image:    -moz-linear-gradient(top, $startColor, $endColor);
  background-image:     -ms-linear-gradient(top, $startColor, $endColor);
  background-image:      -o-linear-gradient(top, $startColor, $endColor);
  background-image:         linear-gradient(top, $startColor, $endColor);
  filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}


/// Background Horizontal
/// @param {Color} $startColor [#3C3C3C] - Start Color
/// @param {Color} $endColor [#999999] - End Color

@mixin background-horizontal($startColor: #3C3C3C, $endColor: #999999) {
  background-color: $startColor;
  background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));
  background-image: -webkit-linear-gradient(left, $startColor, $endColor);
  background-image:    -moz-linear-gradient(left, $startColor, $endColor);
  background-image:     -ms-linear-gradient(left, $startColor, $endColor);
  background-image:      -o-linear-gradient(left, $startColor, $endColor);
  background-image:         linear-gradient(left, $startColor, $endColor);
  filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}', gradientType='1');
}


/// Background Radial
/// @param {Color} $startColor [#3C3C3C] - Start Color
/// @param {Percentage} $startPos [0%] - Start position
/// @param {Color} $endColor [#999999] - End Color
/// @param {Percentage} $endPos [100%] - End position

@mixin background-radial($startColor: #FFFFFF, $startPos: 0%, $endColor: #000000, $endPos:100%) {
  background: -moz-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);
  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos,$startColor), color-stop($endPos,$endColor));
  background: -webkit-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
  background: -o-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
  background: -ms-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
  background: radial-gradient(ellipse at center, $startColor $startPos,$endColor $endPos);
}


/// Background Size
/// @param {Size} $width [100%] - Width
/// @param {Size} $width [$width] - Height
/// @require {mixin} css3-prefix

@mixin background-size($width: 100%, $height: $width) {
  @if type-of($width) == 'number' and $height != null {
    @include css3-prefix(background-size, $width $height);
  } @else {
    @include css3-prefix(background-size, $width);
  }
}


/// Background Color Opacity
/// @param {Color} $color [100%] - Color
/// @param {Double} $opacity [0.85] - Opacity

@mixin background-opacity($color: #000, $opacity: 0.85) {
  background: $color;
  background: rgba($color, $opacity);
}


/// Border Radius
/// @param {Size} $radius [5px] - Radius
/// @require {mixin} css3-prefix

@mixin border-radius($radius: 5px) {
  @include css3-prefix(border-radius, $radius);
}


/// Border Radius Separate
/// @param {Size} $topLeftRadius [5px] - Top Left
/// @param {Size} $topRightRadius [5px] - Top Right
/// @param {Size} $bottomLeftRadius [5px] - Bottom Left
/// @param {Size} $bottomRightRadius [5px] - Bottom Right

@mixin border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomLeftRadius: 5px, $bottomRightRadius: 5px) {
  -webkit-border-top-left-radius:     $topLeftRadius;
  -webkit-border-top-right-radius:    $topRightRadius;
  -webkit-border-bottom-right-radius: $bottomRightRadius;
  -webkit-border-bottom-left-radius:  $bottomLeftRadius;

  -moz-border-radius-topleft:     $topLeftRadius;
  -moz-border-radius-topright:    $topRightRadius;
  -moz-border-radius-bottomright: $bottomRightRadius;
  -moz-border-radius-bottomleft:  $bottomLeftRadius;

  border-top-left-radius:     $topLeftRadius;
  border-top-right-radius:    $topRightRadius;
  border-bottom-right-radius: $bottomRightRadius;
  border-bottom-left-radius:  $bottomLeftRadius;
}


/// Box
/// @param {*} $orient [horizontal] - Orientation
/// @param {*} $pack [center] - Pack
/// @param {*} $align [center] - Align
/// @require {mixin} css3-prefix

@mixin box($orient: horizontal, $pack: center, $align: center) {
  display: -webkit-box;
  display: -moz-box;
  display: box;

  @include css3-prefix(box-orient, $orient);
  @include css3-prefix(box-pack, $pack);
  @include css3-prefix(box-align, $align);
}


/// Box RGBA
/// @param {Integer} $r [60] - Red
/// @param {Integer} $g [3] - Green
/// @param {Integer} $b [12] - Blue
/// @param {Double} $opacity [0.23] - Opacity
/// @param {Color} $color [#3C3C3C] - Color

@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3C3C3C) {
  background-color: transparent;
  background-color: rgba($r, $g, $b, $opacity);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color}',endColorstr='#{$color}');
  zoom:   1;
}


/// Box Shadow
/// @param {Size} $x [2px] - X
/// @param {Size} $y [2px] - Y
/// @param {Size} $blur [5px] - Blur
/// @param {Color} $color [rgba(0,0,0,.4)] - Color
/// @param {Boolean} $inset - Inset

@mixin box-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4), $inset: "") {
  @if ($inset != "") {
    @include css3-prefix(box-shadow, $inset $x $y $blur $color);
  } @else {
    @include css3-prefix(box-shadow, $x $y $blur $color);
  }
}


/// Box Sizing
/// @param {*} $type [border-box] - Type
/// @require {mixin} css3-prefix

@mixin box-sizing($type: border-box) {
  @include css3-prefix(box-sizing, $type);
}


/// Columns
/// @param {Integer} $count [3] - Count
/// @param {Integer} $gap [10] - Gap
/// @require {mixin} css3-prefix

@mixin columns($count: 3, $gap: 10) {
  @include css3-prefix(column-count, $count);
  @include css3-prefix(column-gap, $gap);
}


/// Double Borders
/// @param {Color} $colorOne [#3C3C3C] - Color One
/// @param {Color} $colorTwo [#999999] - Color Two
/// @param {Size} $radius [0] - Radius
/// @require {mixin} css3-prefix
/// @require {mixin} border-radius

@mixin double-borders($colorOne: #3C3C3C, $colorTwo: #999999, $radius: 0) {
  border: 1px solid $colorOne;

  @include css3-prefix(box-shadow, 0 0 0 1px $colorTwo);

  @include border-radius( $radius );
}


/// Flex
/// @param {Integer} $value [1] - Value
/// @require {mixin} css3-prefix

@mixin flex($value: 1) {
  @include css3-prefix(box-flex, $value);
}


/// Flip
/// @param {Double} $scaleX [-1] - ScaleX
/// @require {mixin} css3-prefix

@mixin flip($scaleX: -1) {
  @include css3-prefix(transform, scaleX($scaleX));
  filter:            FlipH;
  -ms-filter:        "FlipH";
}


/// Font Face
/// @param {Font} $fontFamily [myFont] - Font Family
/// @param {String} $eotFileSrc ['myFont.eot'] - Eot File Source
/// @param {String} $woffFileSrc ['myFont.woff'] - Woff File Source
/// @param {String} $ttfFileSrc ['myFont.ttf'] - Ttf File Source
/// @param {String} $svgFileSrc ['myFont.svg'] - Svg File Source

@mixin font-face($fontFamily: myFont, $eotFileSrc: 'myFont.eot', $woffFileSrc: 'myFont.woff', $ttfFileSrc: 'myFont.ttf', $svgFileSrc: 'myFont.svg', $svgFontID: '#myFont') {
  font-family: $fontFamily;
  src: url($eotFileSrc)  format('eot'),
  url($woffFileSrc) format('woff'),
  url($ttfFileSrc)  format('truetype'),
  url($svgFileSrc + $svgFontID) format('svg');
}


/// Opacity
/// @param {Double} $opacity [0.5] - Opacity
/// @require {mixin} css3-prefix

@mixin opacity($opacity: 0.5) {
  $opacityMultiplied: ($opacity * 100);

  filter:         alpha(opacity=$opacityMultiplied);
  -ms-filter:     "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $opacityMultiplied + ")";
  @include css3-prefix('opacity', $opacity);
}


/// Outline Radius
/// @param {Size} $radius [5px] - Radius
/// @require {mixin} css3-prefix

@mixin outline-radius($radius: 5px) {
  @include css3-prefix(outline-radius, $radius);
}


/// Resize
/// @param {*} $directoin [both] - Direction
/// @require {mixin} css3-prefix

@mixin resize($direction: both) {
  @include css3-prefix(resize, $direction);
}


/// Rotate
///
/// CSS Matrix Rotation Calculator http://www.boogdesign.com/examples/transforms/matrix-calculator.html
/// @param {Double} $deg [0] - Degree
/// @param {Double} $m11 [0] - M11
/// @param {Double} $m12 [0] - M12
/// @param {Double} $m21 [0] - M21
/// @param {Double} $m22 [0] - M22
/// @require {mixin} css3-prefix

@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
  @include css3-prefix(transform, rotate($deg + deg));
  filter: progid:DXImageTransform.Microsoft.Matrix(
                  M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');
  zoom: 1;
}


/// Text Shadow
/// @param {Size} $x [2px] - X
/// @param {Size} $y [2px] - Y
/// @param {Size} $blur [2px] - Blur
/// @param {Color} $color [rgba(0,0,0,.4)] - Color

@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
  text-shadow: $x $y $blur $color;
}


/// Transform
/// @param {List} $params - Params
/// @require {mixin} css3-prefix

@mixin transform($params) {
  @include css3-prefix(transform, $params);
}


/// Transform-Origin
/// @param {List} $params - Params
/// @require {mixin} css3-prefix

@mixin transform-origin($params) {
  @include css3-prefix(transform-origin, $params);
}


// Transform-Style
/// @param {List} $params - Params
/// @require {mixin} css3-prefix

@mixin transform-style($style: preserve-3d) {
  @include css3-prefix(transform-style, $style);
}

/// Transition
/// @param {List} $properties - Properties
/// @require {mixin} css3-prefix

@mixin transition($properties...) {

  @if length($properties) >= 1 {
    @include css3-prefix(transition, $properties);
  }

  @else {
    @include css3-prefix(transition,  all 0.2s ease-in-out 0s);
  }
}


/// Triple Borders
/// @param {Color} $colorOne [#3C3C3C] - Color One
/// @param {Color} $colorTwo [#999999] - Color Two
/// @param {Color} $colorThree [#000000] - Color Three
/// @param {Size} $radius [0] - Radius
/// @require {mixin} border-radius
/// @require {mixin} css3-prefix

@mixin triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0) {
  border: 1px solid $colorOne;

  @include border-radius($radius);

  @include css3-prefix(box-shadow, 0 0 0 1px #{$colorTwo}, 0 0 0 2px #{$colorThree});
}


/// Keyframes
/// @param {*} $animation-name - Animation name
/// @content [Animation css]

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}


/// Animation
/// @param {*} $str - name duration timing-function delay iteration-count direction fill-mode play-state ([http://www.w3schools.com/cssref/css3_pr_animation.asp](http://www.w3schools.com/cssref/css3_pr_animation.asp))
/// @require {mixin} css3-prefix

@mixin animation($str) {
  @include css3-prefix(animation, $str);
}



/// Box translate
/// @param {*} $type c: Center, x, y

@mixin translate($type: 'c') {
  position: absolute;
  @if ($type == "x") {
    @include transform(translateX(-50%));
    left: 50%;
  } @else if ( $type == 'y' ){
    @include transform(translateY(-50%));
    top: 50%;
  } @else{
    @include transform(translate(-50%, -50%));
    top: 50%;
    left: 50%;
  }
}


/// Calc
@mixin calc($property, $expression) {
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

/// Calc
@mixin FontAwesome($key) {
  font-family: FontAwesome;
  content: "#{$key}";
  font-style: normal;
  font-weight: normal;
}

$border-color : #ccc;
$gray-text: #888;
/* mobile menu */
.main-nav-mobile{
  overflow-y: scroll;
  position: fixed;
  width: 100%;
  max-height:400px;
  background: #fff none repeat scroll 0 0;
  border-top: 1px solid $border-color;
  border-bottom: 1px solid $border-color;
  display: none;
  z-index: 9999;
  li{
    position: relative;
  }

  > ul{
    margin: 0;
    padding: 0;
    list-style: none;
    >li{
      position: relative;
      @include transform(translateX(-30px));
      @include opacity(0);
      @for $i from 1 through 10 {
        &:nth-child(#{$i}) {
          $r:$i*0.1;
          @include transition(all 0.3s ease-out #{$r}s);
        }
      }

      > a{
        border-bottom: 1px solid $border-color;
        color: $gray-text;
        font-weight: bold;
        text-transform: uppercase;
        letter-spacing: 0.075em;
        display: block;
        padding: 10px 60px 10px 15px;
        position: relative;
        font-size: 13px;

        &:hover{
          color: #000000;
        }
      }

      a{
        > .open-submenu {
          cursor: pointer;
          height: 100%;
          line-height: 50px;
          position: absolute;
          right: 0;
          text-align: center;
          top: 0;
          width: 40px;

          &:after {
            font-size: 15px;
            @include FontAwesome('\f107');
          }

        }
      }

      ul.sub-menu-dropdown,
      div.engo-megamenu-wrapper{
        border-bottom: 1px solid $border-color;
        display: none;
      }

      ul.sub-menu-dropdown,
      ul.sub-menu-megamenu{
        margin: 0;
        padding: 0;
        list-style: none;
        li{
          a{
            padding: 0 10px 0 25px;
            font-size: 13px;
            display: block;
          }
        }
      }

      ul.sub-menu-dropdown{
        padding: 15px 0;
        ul.sub-menu-dropdown{
          border: medium none;
          margin-left: 20px;
          padding: 0;
        }
      }


      div.engo-megamenu-wrapper{
        padding: 10px 0;
        > ul {
          margin: 0;
          padding: 0;
          list-style: none;
          > li {
            margin-bottom: 10px;
            > a,
            > span {
              display: block;
              font-size: 15px;
              color: #000000;
              padding: 3px 10px 3px 25px;
              text-transform: uppercase;
            }
          }
        }
      }

      .searchform{
        margin: 10px;
        input[type="text"]{
          border-width: 1px;
        }
      }


      &.active-menu-item{
        > a {
          > .open-submenu:after{
            content: '\f106';
          }

        }
      }

    }
  }
}
body.opened-nav-animate{
  height: 100%;
  overflow: hidden !important;
  position: fixed;
  width: 100%;
  .main-nav-mobile {
    display: block;
  }
  &.opened-nav{
    .main-nav-mobile{
      > ul{
        li{
          @include transform(translateX(0));
          @include opacity(1);
        }
      }
    }
  }
}
/* TEMPLATE POPUP */
.quickview-v3{
  &.tshopify-popup .content{
  max-width: 850px;
    width: 90%;
    margin: 100px auto 0px;
    background: #fff;
    padding: 20px;
    text-align: left;
    position: relative;
  }


}
.product-quantity .js-qty {
    position: relative;
   width:60%;
      display: inline-block;
    padding: 0px;
}
.tshopify-popup{
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  align-items: center;
  position: fixed;
  z-index: 999999;
  top: 0;
  height: 0;
  width: 0;
  left: 0;
  right: 0;
  bottom: 0;
  text-align: center;
  overflow: hidden;

  visibility: hidden;
  opacity: 0;

  -webkit-transition: all 300ms ease-in-out;
  -moz-transition: all 300ms ease-in-out;
  -ms-transition: all 300ms ease-in-out;
  -o-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
  &.wishlist-popup{
    .btn-cart{
      display: none;}
  }
  &.loading{
    z-index:999;
  }
  .overlay{
    background-color: rgba(0, 0, 0, .3);
    color: rgba(0, 0, 0, .4);
    position: fixed;
    top: 0!important;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    width: 0;
    height: 0;
  }

  .content{
    max-width: 1140px;
    width: 90%;
    margin: 0px auto 0px;
    background: #fff;
    padding: 20px;
    text-align: left;
    position: relative;

    -webkit-transition: all 300ms ease-in-out;
    -moz-transition: all 300ms ease-in-out;
    -ms-transition: all 300ms ease-in-out;
    -o-transition: all 300ms ease-in-out;
    transition: all 300ms ease-in-out;

  }
  @media (max-width: 1500px){
    .content{
      max-width: 700px;

    }
  }
  @media (max-width: 1300px){
    .content{
      max-width: 450px;

    }
  }

  &.active{
    visibility: visible;
    opacity: 1;
    top: 0;
    height: auto;
    width: auto;

    .content{
      max-height: 100%;
    }
    .overlay{
      width: 100%;
      height: 100%;
    }

  }

  .close-window{
        background: #fff;
    border: 2px solid #e6e6e6;
    height: 40px;
    width: 40px;
    text-align: center;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    top: 20px;
    right: 20px;
    cursor: pointer;
    i{
    line-height: 35px;
    color:#e6e6e6;
    }
  }
  .success-message{
    &:hover{
      &:before{
        background: #ffb533;
        color: #fff;
      }
    }
    &:before{
      font-family: FontAwesome;
      content: "\f00c";
      display: inline-block;
      margin-right: 10px;
      font-size: 12px;
    }
  }

  &.loading{
    .loader{
      left: 50%;
      position: fixed;
      top: 50%;
      -moz-transform: translateY(-50%) translateX(-50%);
      -webkit-transform: translateY(-50%) translateX(-50%);
      -o-transform: translateY(-50%) translateX(-50%);
      -ms-transform: translateY(-50%) translateX(-50%);
      transform: translateY(-50%) translateX(-50%);
    }
  }
  .product-name{
        color: #2b2b2b;
    font-family: 'Poppins', sans-serif;

    font-size: 30px;
    margin-bottom: 10px;
    line-height: 50px;
    position: relative;
 
    padding-top: 50px;
    text-transform: uppercase;
    font-weight: 700;
  }
  .compare-price{
     display: inline-block;
    text-transform: line-through;
    color: #979797;
    vertical-align: bottom;
    font: 400 16px 'Poppins', sans-serif;

    margin: 0px;
    margin-right: 20px;
  }
  .br-product__price{
  color: #80b435;
    display: inline-block;
    vertical-align: bottom;
    font: 400 36px/36px 'Poppins', sans-serif;

    margin: 0px;
  }
  .br-product__description{
    font: 400 14px/25px 'Poppins', sans-serif;

        color: #6d6d6d;
        margin-top: 20px;
      margin-bottom: 20px;


    }
  .product-price{
    padding-top:20px;
  }
  
  .selector-wrapper label[for] {
    float: initial;
    min-width: 30%;
    line-height: 39px;
}
  .selector-wrapper .single-option-selector{
  width:60%;
    padding-right:30px;
  }
  .product-quantity{
      font: 700 14px 'Poppins', sans-serif;

    color: #2b2b2b;
    
    display:block;
    margin-bottom: 30px;
    label{
    min-width:30%;
      display:inline-block
    }
    
    .qtyminus{
    position: absolute;
    right: 10px;
    top: 20px;
    }
    .qtyplus{
    position: absolute;
    right: 10px;
    top: 5px;
    }
  }
  .product-actions{
  padding: 20px 0;
  }
  .owl-nav{
  display:none;
  }
}

/* add to cart popup */

.engo-popup{
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  align-items: center;
  position: fixed;
  z-index: 9999;
  top: 0;
  height: 0;
  width: 0;
  left: 0;
  right: 0;
  bottom: 0;
  text-align: center;
  overflow: hidden;

  visibility: hidden;
  opacity: 0;  

  -webkit-transition: all 300ms ease-in-out;
  -moz-transition: all 300ms ease-in-out;
  -ms-transition: all 300ms ease-in-out;
  -o-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
  &.wishlist-popup{
    .btn-cart{
      display: none;}
  }
  &.loading{
    z-index:999;
  }
  .overlay{
    background-color: rgba(0, 0, 0, .3);
    color: rgba(0, 0, 0, .4);
    position: fixed;
    top: 0!important;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    width: 0;
    height: 0;
  }

  .content{
    max-width: 800px;
    padding: 20px;
    margin: 0 auto;
    text-align: left;
    position: relative;
    background: #fff;
    min-width: 490px;

    -webkit-transition: all 300ms ease-in-out;
    -moz-transition: all 300ms ease-in-out;
    -ms-transition: all 300ms ease-in-out;
    -o-transition: all 300ms ease-in-out;
    transition: all 300ms ease-in-out;

  }
  @media (max-width: 1500px){
    .content{
      max-width: 700px;

    }
  }
  @media (max-width: 1300px){
    .content{
      max-width: 650px;

    }
  }

  &.active{
    visibility: visible;
    opacity: 1; 
    top: 0;
    height: auto;
    width: auto; 

    .content{
      max-height: 100%;
    }
    .overlay{
      width: 100%;
      height: 100%;
    }

  }

  .close-window{
        background: #fff;
    border: 2px solid #e6e6e6;
    height: 40px;
    width: 40px;
    text-align: center;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    top: 10px;
    right: 10px;
    cursor: pointer;
    i{
    line-height: 35px;
    color:#e6e6e6;
    }
  }
  .success-message{
    &:hover{
      &:before{
        background: #ffb533;
        color: #fff;
      }
    }
    &:before{
      font-family: FontAwesome;
      content: "\f00c";
      display: inline-block;
      margin-right: 10px;
      font-size: 12px;
    }
  }

  &.loading{
    .loader{
      left: 50%;
      position: fixed;
      top: 50%;
      -moz-transform: translateY(-50%) translateX(-50%);
      -webkit-transform: translateY(-50%) translateX(-50%);
      -o-transform: translateY(-50%) translateX(-50%);
      -ms-transform: translateY(-50%) translateX(-50%);
      transform: translateY(-50%) translateX(-50%);
    }
  }
  .product-name{
    font-weight: 700;
    font-family: Montserrat, Arial, sans-serif;}

}
.cart-popup{
  .btn-wishlist{
    display: none;}
}
.f-left {
    float: left;
}
.f-right {
    float: right;
}
.mt-100 {
	margin-top: 100px;
}
.mr-10 {
	margin-right: 10px;
}
.pr-20 {
	padding-right: 20px;
}

/*Hidden Ajax Popup AddtoCart Mobile*/
@media screen and (max-width: 480px) {
  .engoc_hide_mobile {
  	display: none !important;
  }
} 


/// Shopy Filters ///
.filter-block {
    ul.box-list-stype {
      li{line-height: 30px;}
    }
    ul.box-grid-stype  {
        li {
              display: inline-block;
              padding:0 0;
              padding-right: 10px;
              .color{
                  width:20px;
                  height:20px;
                  border: 1px solid #333;
              }
              input{
                display: none;}

              a span{
                  display:block;
                  width:30px;
                  height:20px;
              }
              &.active .color{
                border: 2px solid #e0545f;
              }
              label{color: #e0545f;}
        }
        &.sizes a span{
            width:50px;
            border:solid 1px #CCC;
        }
    }
    ul.box-list-stype{li{label{color: #e0545f;}}}
    clear:both;
    .clear{
          float: right;
    line-height: 15px;
    text-transform: none;
    color: red;
    }
    h5.filter-title {
        font-size: 12px;
        color: #E0545F;
        margin: 20px 0;
    }
}


.colors .Red
{
  background-color:#f50000;
}


.colors .blue
{
  background-color:#005ff5;
}


.colors .white
{
  background-color:#fff;
}


.colors .orange
{
  background-color:#ff6c01;
}


.colors .black
{
  background-color:#000000;
}


.colors .pupple
{
  background-color:#6901ff;
}





.li-price input{
  display: none;
}


